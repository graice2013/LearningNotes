#
# how to use Maven com.github.tntim96:jscover-server-maven-plugin in maven:
#
Example 1.
1) in pom.xml :
                <plugin>
                    <groupId>com.github.tntim96</groupId>
                    <artifactId>jscover-server-maven-plugin</artifactId>
                    <version>1.0.14</version>
                    <configuration>
                        <documentRoot>${project.basedir}</documentRoot>
                        <includeUnloadedJS>true</includeUnloadedJS>
                        <includeBranch>true</includeBranch>
                        <includeFunction>true</includeFunction>
                        <reportCoberturaXML>true</reportCoberturaXML>
                        <reportLCOV>true</reportLCOV>
                        <timeOutSeconds>20</timeOutSeconds>
                        <webDriverClassName>org.openqa.selenium.chrome.ChromeDriver</webDriverClassName>
                        <systemProperties>
							<!-- TODO: update chromedriver.exe to support both Windows and Linux -->
                            <property>
                                <name>webdriver.chrome.driver</name>
                                <value>${driver.path}/chromedriver.exe</value>
                            </property>
                            <!--
                            <property>
                                <name>phantomjs.binary.path</name>
                                <value>${project.build.directory}/tp/phantomjs/phantomjs-2.0.0-windows/bin/phantomjs.exe</value>
                            </property> -->
                        </systemProperties>
                    </configuration>
                </plugin>
				
        <profile>
            <id>unit_test</id>
            <activation>
                <activeByDefault>false</activeByDefault>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>com.github.tntim96</groupId>
                        <artifactId>jscover-server-maven-plugin</artifactId>
                        <configuration>
                            <testDirectory>${project.build.testSourceDirectory}/unittest</testDirectory>
                            <testIncludes>SDKAPIUnitTestRunner.html,ChartUnitTestRunner.html,MapUnitTestRunner.html,HichertUnitTestRunner.html</testIncludes>
                            <testType>QUnit</testType>
                            <lineCoverageMinimum>1</lineCoverageMinimum>
                            <branchCoverageMinimum>1</branchCoverageMinimum>
                            <functionCoverageMinimum>1</functionCoverageMinimum>
                            <port>8098</port>
                            <timeOutSeconds>300</timeOutSeconds>
                            <timeOutSecondsForSave>60</timeOutSecondsForSave>
                            <instrumentPathArgs>
                                <arg>--only-instrument-reg=src/main/js/.*js</arg>
                            </instrumentPathArgs>
                            <reportDir>${project.basedir}/target/jscover-reports/unittest</reportDir>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>				

2) Run with mvn -Punit_test jscover-server:jscover

# ref doc:  https://tntim96.github.io/JSCover/manual/manual.xml
# ref doc:  https://github.com/tntim96/JSCover-maven-plugin
# ref doc:	https://github.com/tntim96/JSCover-maven-plugin/tree/master/plugin-parent/server

3) plugin info:
#
# jscover-server-maven-plugin info
#
Evaluation report:
	https://wiki.wdf.sap.corp/wiki/display/BPM/JavaScript+Code+Coverage+Tool+Evaluation

Issues and Bugs:
	https://wiki.wdf.sap.corp/wiki/display/BISHGVisualization/Issue+and+solution
		
# ref doc: https://github.com/tntim96/JSCover-maven-plugin	

	2 modes: server mode, file mode.
	3 goals:
	mvn jscover-file:instrument
	mvn jscover-file:jscover
	mvn jscover-server:jscover

To merge reports generated from both server and file, run:
	mvn jscover-report:merge
	mvn jscover-report:format

# ref doc:  https://github.com/tntim96/JSCover-maven-plugin
# ref doc:  https://github.com/tntim96/JSCover-Samples

4) how to use jscover:
	2 ways: in jscover*.jar , or plugin ex. jscover*.maven.plugin.
	# ref doc:  http://www.cnblogs.com/reach296/p/4293885.html

5) detailed usage step:
	5.1)	Download latest CVOM.HTML source code through Git Extension into C:\git\${Jenkins_workspace1}\
	ssh://<i-number>@${git_server1}:29418/${git_repo1}
	
	5.2)	Copy the 2 settings files in the attachment into C:\Work\tools\Maven\maven-settings-on-jenkins\
	5.3)	cd C:\git\${Jenkins_workspace1}\
	5.4)	add following lines into pom.xml under C:\git\${Jenkins_workspace1}\, in node project\build\pluginManagement\plugins\ (as shown in the attachment):

		<!-- for jscover-report -->
		<plugin>
				<groupId>com.github.tntim96</groupId>
				<artifactId>jscover-report-maven-plugin</artifactId>
				<version>1.0.19</version>
				<executions>
					<execution>
						<phase>verify</phase>
						<goals>
							<goal>merge</goal>
							<goal>format</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<!--Configuration for merge goal-->
					<destDir>merged</destDir>
					<mergeDirStrings>
						<mergeDirString>container\target\jscover-reports\unittest</mergeDirString>
						<mergeDirString>info\target\jscover-reports\unittest</mergeDirString>
						<mergeDirString>viz\target\jscover-reports\unittest</mergeDirString>
					</mergeDirStrings>
					<!--Configuration for format goal-->
					<reportDir>merged</reportDir>
					<srcDir>${project_module1}src/main/js</srcDir>
					<coberturaXML>true</coberturaXML>
					<lCOV>true</lCOV>
				</configuration>
		</plugin>
		
# extra info:
			mergeDirStrings is an ArrayList, mergeDirString is the path of report1, report2...
			
			srcDir could be not used any more, used in version before 1.0.16 at Sep 11, 2015,
					could be a legacy parameter.
			# ref doc:		https://github.com/tntim96/JSCover-maven-plugin/issues/15
			# legacy ref doc:	http://grepcode.com/file/repo1.maven.org/maven2/org.bitbucket.jscl/jscover-legacy-plugin/0.0.3/org/jscover/maven/AbstractJSCoverLegacyMojo.java
			
		# ref doc for jscover-report:		https://github.com/tntim96/JSCover-maven-plugin/blob/master/plugin-parent/report/README.md
		# ref doc for jscover-report source:	https://javalibs.com/artifact/com.github.tntim96/jscover-report-maven-plugin?className=jscover.maven.MergeMojo&source
							https://github.com/tntim96/JSCover-maven-plugin/blob/master/plugin-parent/report/src/main/java/jscover/maven/MergeMojo.java


	5.5)	run following 4 mvn commands in order in a CMD box:
			mvn -gs C:\Work\tools\Maven\maven-settings-on-jenkins\Jenkins_GlobalSettings_global_maven_settings.xml -s C:\Work\tools\Maven\maven-settings-on-jenkins\LeanDI_settings_maven_user_settings.xml clean package
			
			mvn -gs C:\Work\tools\Maven\maven-settings-on-jenkins\Jenkins_GlobalSettings_global_maven_settings.xml -s C:\Work\tools\Maven\maven-settings-on-jenkins\LeanDI_settings_maven_user_settings.xml -f ${project_module1}pom.xml jscover-server:jscover -Punit_test | tee C:\Work\4Tasks\check_ut_coverage_failure\debug\log.jscover_container
			
			mvn -gs C:\Work\tools\Maven\maven-settings-on-jenkins\Jenkins_GlobalSettings_global_maven_settings.xml -s C:\Work\tools\Maven\maven-settings-on-jenkins\LeanDI_settings_maven_user_settings.xml -f ${project_module2}pom.xml jscover-server:jscover -Punit_test | tee C:\Work\4Tasks\check_ut_coverage_failure\debug\log.jscover_info
			
			mvn -gs C:\Work\tools\Maven\maven-settings-on-jenkins\Jenkins_GlobalSettings_global_maven_settings.xml -s C:\Work\tools\Maven\maven-settings-on-jenkins\LeanDI_settings_maven_user_settings.xml -f ${project_module3}pom.xml jscover-server:jscover -Punit_test | tee C:\Work\4Tasks\check_ut_coverage_failure\debug\log.jscover_viz
			
			mvn -gs C:\Work\tools\Maven\maven-settings-on-jenkins\Jenkins_GlobalSettings_global_maven_settings.xml -s C:\Work\tools\Maven\maven-settings-on-jenkins\LeanDI_settings_maven_user_settings.xml com.github.tntim96:jscover-report-maven-plugin:merge | tee C:\Work\4Tasks\check_ut_coverage_failure\debug\log.jscover_merge
			
			mvn -gs C:\Work\tools\Maven\maven-settings-on-jenkins\Jenkins_GlobalSettings_global_maven_settings.xml -s C:\Work\tools\Maven\maven-settings-on-jenkins\LeanDI_settings_maven_user_settings.xml com.github.tntim96:jscover-report-maven-plugin:format | tee C:\Work\4Tasks\check_ut_coverage_failure\debug\log.jscover_format
	
	5.6)	open report file:///C:/git/${Jenkins_workspace1}/merged/jscoverage.html in firefox.

6) how jscover instrument js script
#
	# ref doc:	https://tntim96.github.io/JSCover/manual/manual.xml#implementationInstrumentation




	
#
# Mandatory, local system account works in some situation, but not always. ex. could have ChromeDriver "unable to discover open pages" Exception:
#
#	[INFO] --- jscover-server-maven-plugin:1.0.14:jscover (default-cli) @ sap.viz.charts ---
#	[INFO] Started JSCover server
#	Starting ChromeDriver 2.19.346078 (6f1f0cde889532d48ce8242342d0b84f94b114a1) on port 32127
#	Only local connections are allowed.
#	java.lang.NullPointerException
#		at jscover.maven.JSCoverMojo.stopWebClient(JSCoverMojo.java:144)
#		at jscover.maven.ServerMojo.execute(ServerMojo.java:44)
#		at org.apache.maven.plugin.DefaultBuildPluginManager.executeMojo(DefaultBuildPluginManager.java:133)
#		at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:208)
#		at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:153)
#		at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:145)
#		at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:108)
#		at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:76)
#		at org.apache.maven.lifecycle.internal.builder.singlethreaded.SingleThreadedBuilder.build(SingleThreadedBuilder.java:51)
#		at org.apache.maven.lifecycle.internal.LifecycleStarter.execute(LifecycleStarter.java:116)
#		at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:361)
#		at org.apache.maven.DefaultMaven.execute(DefaultMaven.java:155)
#		at org.apache.maven.cli.MavenCli.execute(MavenCli.java:584)
#		at org.apache.maven.cli.MavenCli.doMain(MavenCli.java:213)
#		at org.apache.maven.cli.MavenCli.main(MavenCli.java:157)
#		at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
#		at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
#		at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
#		at java.lang.reflect.Method.invoke(Method.java:497)
#		at org.codehaus.plexus.classworlds.launcher.Launcher.launchEnhanced(Launcher.java:289)
#		at org.codehaus.plexus.classworlds.launcher.Launcher.launch(Launcher.java:229)
#		at org.codehaus.plexus.classworlds.launcher.Launcher.mainWithExitCode(Launcher.java:415)
#		at org.codehaus.plexus.classworlds.launcher.Launcher.main(Launcher.java:356)
#	java.lang.NullPointerException
#		at jscover.maven.JSCoverMojo.stopWebClient(JSCoverMojo.java:149)
#		at jscover.maven.ServerMojo.execute(ServerMojo.java:44)
#		at org.apache.maven.plugin.DefaultBuildPluginManager.executeMojo(DefaultBuildPluginManager.java:133)
#		at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:208)
#		at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:153)
#		at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:145)
#		at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:108)
#		at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:76)
#		at org.apache.maven.lifecycle.internal.builder.singlethreaded.SingleThreadedBuilder.build(SingleThreadedBuilder.java:51)
#		at org.apache.maven.lifecycle.internal.LifecycleStarter.execute(LifecycleStarter.java:116)
#		at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:361)
#		at org.apache.maven.DefaultMaven.execute(DefaultMaven.java:155)
#		at org.apache.maven.cli.MavenCli.execute(MavenCli.java:584)
#		at org.apache.maven.cli.MavenCli.doMain(MavenCli.java:213)
#		at org.apache.maven.cli.MavenCli.main(MavenCli.java:157)
#		at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
#		at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
#		at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
#		at java.lang.reflect.Method.invoke(Method.java:497)
#		at org.codehaus.plexus.classworlds.launcher.Launcher.launchEnhanced(Launcher.java:289)
#		at org.codehaus.plexus.classworlds.launcher.Launcher.launch(Launcher.java:229)
#		at org.codehaus.plexus.classworlds.launcher.Launcher.mainWithExitCode(Launcher.java:415)
#		at org.codehaus.plexus.classworlds.launcher.Launcher.main(Launcher.java:356)
#	[INFO] Stopped JSCover server
#	[INFO] ------------------------------------------------------------------------
#	[INFO] BUILD FAILURE
#	[INFO] ------------------------------------------------------------------------
#	[INFO] Total time: 01:07 min
#	[INFO] Finished at: 2016-06-21T18:34:09+08:00
#	[INFO] Final Memory: 13M/169M
#	[INFO] ------------------------------------------------------------------------
#		[ERROR] Failed to execute goal com.github.tntim96:jscover-server-maven-plugin:1.0.14:jscover (default-cli) on project sap.viz.charts: Execution default-cli of goal com.github.tntim96:jscover-server-maven-plugin:1.0.14:jscover failed: java.lang.reflect.InvocationTargetException: unknown error: unable to discover open pages
#		[ERROR] (Driver info: chromedriver=2.19.346078 (6f1f0cde889532d48ce8242342d0b84f94b114a1),platform=Windows NT 6.1 SP1 x86_64) (WARNING: The server did not provide any stacktrace information)
#		[ERROR] Command duration or timeout: 61.64 seconds
#		[ERROR] Build info: version: '2.46.0', revision: '61506a4624b13675f24581e453592342b7485d71', time: '2015-06-04 10:22:50'
#		[ERROR] System info: host: '${Jenkins_slave1}', ip: '10.193.229.200', os.name: 'Windows Server 2008 R2', os.arch: 'amd64', os.version: '6.1', java.version: '1.8.0_45'
#		[ERROR] Driver info: org.openqa.selenium.chrome.ChromeDriver

# jenkins slave should be set up as a service, for not jscover-server-maven-plugin.
# on 9/14/2016, chrome version is better 53.0.2785.89 (64-bit), not the latest version or former version,
#		to fix above except: not load cross-origin content.
#		ref doc:
#			https://bugs.chromium.org/p/chromedriver/issues/detail?id=1389
#			https://groups.google.com/a/chromium.org/forum/#!msg/chromium-dev/QL2K4yFVg_U/vj44YWOaAwAJ

# only for manual test
#	3. 	java -jar slave.jar -jnlpUrl http://shg-cvom-infra.pgdev.sap.corp:8080/computer/shg-ci-build03/slave-agent.jnlp


