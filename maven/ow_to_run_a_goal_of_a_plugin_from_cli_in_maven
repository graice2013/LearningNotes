#
# How to run a goal of a plugin from cli?
#
I.	Method 1. Use default-cli
Ex. for com.cj.jshintmojo:jshint-maven-plugin:1.3.0:lint :
	mvn jshint:lint
II.	Method2. Use own “Execution”
Ex. defined “ExecutionId” as “Lint source” :
mvn jshint:lint@"Lint source" | tee log.jshint_lint_ifdefault-cli
	# ref doc: 
http://stackoverflow.com/questions/3166538/how-to-execute-maven-plugin-execution-directly-from-command-line 
	# ref doc:
Execution of multiple goals from the CLI is now supported in Maven 3.3.1+
mvn exec:java@first-cli
mvn exec:java@second-cli
Where first-cli/second-cli are the execution ids.
http://blog.soebes.de/blog/2015/03/17/apache-maven-3-dot-3-1-features/
	# ref doc:
From official Maven documentation: 
Command line execution id 
each mojo invoked directly from the command line will have an execution Id of default-cli assigned to it, which will allow the configuration of that execution from the POM by using this default execution Id
Default binding execution id
each mojo bound to the build lifecycle via the default lifecycle mapping for the specified POM packaging will have an execution Id of default-goalName assigned to it
Default plugin execution id
the default value of the executionId - literally set to default in the POM model - was meant to provide some of this functionality. Unfortunately, this solution was never tested to make sure it worked with the use cases above; they fell through the cracks during testing. Now, with the release of Maven 2.2.0 (and later, Maven 3.0), these use cases can finally be addressed

http://stackoverflow.com/questions/34590452/what-is-the-implicit-id-of-a-maven-plugin-execution 

