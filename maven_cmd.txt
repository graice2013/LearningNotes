##
##
##
#
#	create a simple project
#
cd c:\eclipse\mvnPrac
mvn archetype:generate -DgroupId=org.sonatype.mavenbook -DartifactId=simple -DpackageName=org.sonatype.mavenbook -Dversion=1.0-SNAPSHOT

#	ref doc:	http://books.sonatype.com/mvnex-book/reference/simple-project-sect-create-simple.html

ls -lahR -I '.' -I '..' simple

  
##
## maven configuration items in settings.xml : details  
##
#	ref doc: http://www.cnblogs.com/yakov/archive/2011/11/26/maven2_settings.html


##
##
##
#	maven commands used:
mvn archetype:generate -DgroupId=org.sonatype.mavenbook -DartifactId=simple -Dpackage=org.sonatype.mavenbook -Dversion=1.0-SNAPSHOT
mvn clean install
	#	To prove to yourself that this program works, run it from the command line.
		java -cp target/simple-1.0-SNAPSHOT.jar org.sonatype.mavenbook.App

mvn help:effective-pom
mvn site

# maven commands format:
1) mvn pluginId:goalId (prefix of the plugin)
2) mvn lifecycle

mvn archetype:generate -DgroupId=org.sonatype.mavenbook.custom -DartifactId=simple-weather -Dversion=1.0
mvn help:describe -Dplugin=exec -Dfull
mvn dependency:resolve
mvn dependency:tree

mvn exec:java -Dexec.mainClass=org.sonatype.mavenbook.weather.Main -Dexec.args="70112"
mvn help:describe -Dplugin=exec -Dfull

mvn test -Dmaven.test.failure.ignore=true
mvn install -Dmaven.test.skip=true

mvn install assembly:assembly
cd target
java -cp simple-weather-1.0-jar-with-dependencies.jar org.sonatype.mavenbook.weather.Main


mvn archetype:generate -DgroupId=org.sonatype.mavenbook.simpleweb -DartifactId=simple-webapp -Dpackage=org.sonatype.mavenbook -Dversion=1.0-SNAPSHOT
#	10: internal -> org.apache.maven.archetypes:maven-archetype-webapp (An archetype which contains a sample Maven Webapp project.)

mvn clean install
mvn jetty:run

curl http://localhost:8080/simple-webapp/simple
## TODO3: curl command?







##
## TODO1: read through 2 modules: Commons.IOUtils, Velocity
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-io</artifactId>
            <version>1.3.2</version>
            <scope>test</scope>
        </dependency>

import org.apache.velocity.VelocityContext;
import org.apache.velocity.app.Velocity;
		
##
## TODO2: read through jar module: mainClass, addClasspath
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-jar-plugin</artifactId>
        <configuration>
          <archive>
            <manifest>
              <mainClass>org.sonatype.mavenbook.weather.Main</mainClass>
              <addClasspath>true</addClasspath>
            </manifest>
          </archive>
        </configuration>
      </plugin>


##
## further info
##
1) POWA:
	Plain-Old Web Applications (POWA)—a Spring Framework.一个简单 Web 应用.	  

##
## FAQ
##

1) for error:
	No compiler is provided in this environment. Perhaps you are running on a JRE rather than a JDK
#
# debug steps:
check if all configuration are correct.
	%M2_HOME%\conf\settings.xml
	%USERPROFILE%\.m2\settings.xml
	<$project>\pom.xml
	env variables:
		JAVA_HOME
		M2_HOME
		M2
		MAVEN_OPTS ()
		PATH
	ex.
		JAVA_HOME=C:\Progra~1\Java\jdk1.8.0_45
		M2_HOME=c:\maven
		M2=c:\maven\bin
		MAVEN_OPTS=-XX:MaxPermSize=256m					# deprecated. Java HotSpot(TM) 64-Bit Server VM warning: ignoring option MaxPermSize=256m; support was removed in 8.0
		(or MAVEN_OPTS=-Xms2014m -XX:MaxPermSize=512m)	# deprecated. Java HotSpot(TM) 64-Bit Server VM warning: ignoring option MaxPermSize=256m; support was removed in 8.0
		(or MAVEN_OPTS=-Xms256m -Xmx512m)
		
		Path=C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\Windows\CCM;C:\Progra~1\Java\jdk1.8.0_45\bin;c:\maven\bin;C:\Program Files (x86)\Notepad++;C
			:\Program Files (x86)\Git\bin;C:\Work\tools\Windows_systemtools\SysinternalsSuite;C:\ProgramData\Oracle\Java\javapath;C:\Progra~1\nodejs;C:\Program Files (x86)\GitExtensions\;C:\Python27;C:\xmake-0.9.
			1\bin;C:\groovy-2.4.5\bin;C:\Progra~1\nodejs;C:\Progra~1\nodejs\node_modules;C:\PROGRA~1\nodejs\npm_dir\node_modules;C:\Program Files (x86)\QuickTime\QTSystem\


	
##
##		TODO 1 : double check settings in Eclipse:
##				1) how to set up "Maven build" for a project as default-cli
##				2) how to enable "Run as" tool bar
#
Import projects from folder -> Select root directory: C:\eclipse\mvnPrac\simple

##
##		TODO 2 : re-cap pom.xml infra.
##


2) for error:
	[ERROR] Failed to execute goal org.apache.maven.plugins:maven-compiler-plugin:3.1:compile (default-compile) on project simple: Compilation failure -> [Help 1]
	org.apache.maven.lifecycle.LifecycleExecutionException: Failed to execute goal org.apache.maven.plugins:maven-compiler-plugin:3.1:compile (default-compile) on project simple: Compilation failure
	
# debug steps:
#	could be wrong packaging setting in pom.xml.
#
Step 1. 	mvn -X install
				# output
				...
				[DEBUG] Goal:          org.apache.maven.plugins:maven-install-plugin:2.4:install (default-install)
				...

Step 2. 	mvn org.apache.maven.plugins:maven-install-plugin:2.4:install
				# output
				[ERROR] Failed to execute goal org.apache.maven.plugins:maven-install-plugin:2.4:install (default-cli) on project simple: The packaging for this project did not assign a file to the build artifact ->
				[Help 1]

# workaround 1:				
=> update pom.xml
	from 		<packaging>jar</packaging>
	to 			<packaging>pom</packaging>	


# workaround 2:
double check if 2 cmds exists.
	%JAVA_HOME%\bin\javac.exe
	%JAVA_HOME%\bin\javaw.exe








