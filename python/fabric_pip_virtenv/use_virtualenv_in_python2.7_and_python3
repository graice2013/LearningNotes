#
# use virtualenv in python2.7 and python3
#
1) for python 2.7
sudo pip install virtualenv
    
mkdir /.../virtenv
    
virtualenv -p /usr/bin/python2.7 --no-site-packages py2venv
    Running virtualenv with interpreter /usr/bin/python2.7
    New python executable in /.../Python/virtenv/py2venv/bin/python
    Installing setuptools, pip, wheel...done.
# default is --system-site-packages

source py2venv/bin/activate
    (py3venv) L**:virtenv l**$ 
pip list --format=columns
    Package    Version
    ---------- -------
    pip        9.0.1  
    setuptools 36.5.0 
    wheel      0.30.0 

pip install ...
pip freeze -l > /tmp/requirements.txt
deactivate


2) for python3
brew install python3
sudo pip3 install virtualenv virtualenvwrapper
virtualenv -p /usr/local/bin/python3 --no-site-packages py3venv
    Running virtualenv with interpreter /usr/local/bin/python3
    Using base prefix '/usr/local/.../3.6.2/Frameworks/Python.framework/Versions/3.6'
    New python executable in /.../Python/virtenv/py3venv/bin/python3.6
    Also creating executable in /.../Python/virtenv/py3venv/bin/python
    Installing setuptools, pip, wheel...done.
pip3 list --format=columns
    Package    Version
    ---------- -------
    pip        9.0.1  
    setuptools 36.5.0 
    wheel      0.30.0 


3) use virtualenvwrapper
virtualenvwrapper works for both python2 and python3.
It can be installed only once, after setting it up through ~/.bashrc, it works for both python2 and python3.

mkvirtualenv -p python2.7 py2venv1
    Running virtualenv with interpreter /usr/bin/python2.7
    New python executable in /Users/.../python
    Installing setuptools, pip, wheel...done.
    virtualenvwrapper.user_scripts creating /Users/l**/.virtualenvs/py2venv1/bin/predeactivate
    virtualenvwrapper.user_scripts creating /Users/.../postdeactivate
    virtualenvwrapper.user_scripts creating /Users/.../preactivate
    virtualenvwrapper.user_scripts creating /Users/.../postactivate
    virtualenvwrapper.user_scripts creating /Users/.../get_env_details
(py2venv1) L**:virtenv l**$ lsvirtualenv
py2venv1
========


(py2venv1) L**:virtenv l**$ workon
py2venv1

(py2venv1) L**:virtenv l**$ rmvirtualenv

4) setup steps to use virtualenvwrapper
    # Setup:
    #
    #  1. Create a directory to hold the virtual environments.
    #     (mkdir $HOME/.virtualenvs).
    #  2. Add a line like "export WORKON_HOME=$HOME/.virtualenvs"
    #     to your .bashrc.
    #  3. Add a line like "source /path/to/this/file/virtualenvwrapper.sh"
    #     to your .bashrc.
    #  4. Run: source ~/.bashrc
    #  5. Run: workon
    #  6. A list of environments, empty, is printed.
    #  7. Run: mkvirtualenv temp
    #  8. Run: workon
    #  9. This time, the "temp" environment is included.
    # 10. Run: workon temp
    # 11. The virtual environment is activated.
    #
ex. fullpath of virtualenvwrapper.sh:     /usr/local/bin/virtualenvwrapper.sh
    a examplar .bashrc with virtualenvwrapper settings:
        $ cat ~/.bashrc
        export VIRTUALENVWRAPPER_PYTHON=/usr/local/bin/python3
        export WORKON_HOME="/Volumes/Data/Learning/Python/virtenv"
        source /usr/local/bin/virtualenvwrapper.sh


5) output of brew install python3
    Updating Homebrew...
    ==> Auto-updated Homebrew!
    Updated 2 taps (homebrew/core, homebrew/php).
    ==> New Formulae
    azure-cli@1            bettercap              configen               json-table             liquid-dsp             pdfsandwich            pony-stable
    ==> Updated Formulae
    abcm2ps                          elasticsearch                    ibex                             mercurial                        ruby
    abcmidi                          elvish                           imagemagick                      meson                            ruby-build
    activemq-cpp                     emacs                            imagemagick@6                    metricbeat                       ruby@2.2
    aespipe                          emp                              ios-sim                          micro                            ruby@2.3
    akamai                           entr                             iozone                           mikutter                         saldl
    angular-cli                      erlang                           ipython                          mongo-c-driver                   saltstack
    apache-opennlp                   evince                           ipython@5                        mongodb ✔                        sbt
    app-engine-go-64                 exim                             ired                             mongoose                         scons
    app-engine-java                  faas-cli                         iso-codes                        mpv                              sdb
    app-engine-python                fd                               jasper                           mycli                            sfcgal
    asdf                             ffmpeg                           jenkins                          ncmpc                            shadowsocks-libev
    at-spi2-atk                      fibjs                            jenkins-lts                      nghttp2                          shairport-sync
    at-spi2-core                     file-roller                      jetty                            ngspice                          shared-mime-info
    atk                              filebeat                         jetty-runner                     no-more-secrets                  skinny
    awscli                           firebase-cli                     jhipster                         node                             ssdeep
    axel                             flow                             jpeg-turbo                       node-build                       streamlink
    azure-cli                        fluent-bit                       jruby                            nomad                            syncthing
    bandcamp-dl                      folly                            jsdoc3                           notmuch                          szip
    baresip                          fontconfig                       jsonschema2pojo                  nspr                             taylor
    basex                            freetds                          juju                             openrtsp                         tbb
    bento4                           freetype ✔                       jvgrep                           openvdb                          teleport
    bitrise                          gandi.cli                        kafka                            packer                           termius
    bltool                           gdk-pixbuf                       khal                             packetbeat                       terraform
    brotli                           geckodriver                      kibana                           paket                            terragrunt
    buku                             git-lfs                          kobalt                           pam_yubico                       testssl
    caddy                            gjs                              kompose                          pandoc-citeproc                  texinfo
    cake                             glade                            kubernetes-cli                   pc6001vx                         texmath
    certbot                          glib                             launchdns                        percona-server-mongodb           tgui
    cgal                             glib-networking                  lbdb                             pgcli                            tmuxinator-completion
    cgrep                            glibmm                           lean-cli                         pgloader                         todoman
    chakra                           gmic                             lftp                             pgrouting                        tomcat
    cheat                            gnupg                            libcouchbase                     pick                             tomcat-native
    chronograf                       gobject-introspection            libfaketime                      plantuml                         tor
    cimg                             gofabric8                        libgweather                      poco                             treefrog
    citus                            gradle                           libhdhomerun                     ponyc                            unbound
    clhep                            grafana                          libinfinity                      povray                           urh
    cli53                            grpc                             liblockfile                      pre-commit                       vala
    clojure                          gsoap                            libmowgli                        protobuf                         valabind
    closure-compiler                 gtk+3                            libngspice                       pulseaudio                       vault
    cmake                            gtk-gnutella                     libquicktime                     pwntools                         vim
    cmark-gfm                        gtkmm3                           libraw                           py2cairo                         vim@7.4
    cockroach                        gucharmap                        libre                            py3cairo                         webpack
    conan                            haxe                             libsoup                          pybind11                         wireguard-tools
    conjure-up                       heroku                           libstfl                          pyenv                            wpscan
    consul-template                  hexedit                          libuvc                           pygobject3                       xorriso
    convox                           homebank                         lightning                        pyinvoke                         xtensor
    cppad                            homebrew/php/composer            llnode                           qpdf                             yarn
    cputhrottle                      homebrew/php/php-cs-fixer        logstash                         qrencode                         you-get
    dep                              homebrew/php/php56-opcache       lxc                              rabbitmq                         youtube-dl
    dhall-json                       homebrew/php/php70-opcache       macvim                           rebar@3                          zsh
    dlib                             homebrew/php/php71-opcache       magic-wormhole                   redis
    docfx                            homebrew/php/php72-opcache       media-info                       restund
    docker-cloud                     hugo                             mediaconch                       rgbds
    docker-machine-parallels         hyper                            mednafen                         roswell
    ==> Renamed Formulae
    fbida -> exiftran                                                                  gnome-icon-theme -> adwaita-icon-theme
    ==> Deleted Formulae
    kes
    
    ==> Installing dependencies for python3: sqlite, gdbm, xz
    ==> Installing python3 dependency: sqlite
    ==> Downloading https://homebrew.bintray.com/bottles/sqlite-3.20.1.yosemite.bottle.tar.gz
    ######################################################################## 100.0%
    ==> Pouring sqlite-3.20.1.yosemite.bottle.tar.gz
    ==> Caveats
    Homebrew has detected an existing SQLite history file that was created
    with the editline library. The current version of this formula is
    built with Readline. To back up and convert your history file so that
    it can be used with Readline, run:
    
      sed -i~ 's/\\040/ /g' ~/.sqlite_history
    
      before using the `sqlite` command-line tool again. Otherwise, your
      history will be lost.
    
      This formula is keg-only, which means it was not symlinked into /usr/local,
      because macOS provides an older sqlite3.
    
      If you need to have this software first in your PATH run:
        echo 'export PATH="/usr/local/opt/sqlite/bin:$PATH"' >> ~/.bash_profile
    
        For compilers to find this software you may need to set:
            LDFLAGS:  -L/usr/local/opt/sqlite/lib
                CPPFLAGS: -I/usr/local/opt/sqlite/include
    
                ==> Summary
                🍺  /usr/local/Cellar/sqlite/3.20.1: 11 files, 3MB
                ==> Installing python3 dependency: gdbm
                ==> Downloading https://homebrew.bintray.com/bottles/gdbm-1.13.yosemite.bottle.tar.gz
    ######################################################################## 100.0%
                ==> Pouring gdbm-1.13.yosemite.bottle.tar.gz
                🍺  /usr/local/Cellar/gdbm/1.13: 19 files, 554.5KB
                ==> Installing python3 dependency: xz
                ==> Downloading https://homebrew.bintray.com/bottles/xz-5.2.3.yosemite.bottle.tar.gz
    ######################################################################## 100.0%
                ==> Pouring xz-5.2.3.yosemite.bottle.tar.gz
                🍺  /usr/local/Cellar/xz/5.2.3: 92 files, 1.4MB
                ==> Installing python3
                ==> Downloading https://homebrew.bintray.com/bottles/python3-3.6.2.yosemite.bottle.tar.gz
    ######################################################################## 100.0%
                ==> Pouring python3-3.6.2.yosemite.bottle.tar.gz
                ==> /usr/local/Cellar/python3/3.6.2/bin/python3 -s setup.py --no-user-cfg install --force --verbose --install-scripts=/usr/local/Cellar/python3/3.6.2/bin --install-l
                ==> /usr/local/Cellar/python3/3.6.2/bin/python3 -s setup.py --no-user-cfg install --force --verbose --install-scripts=/usr/local/Cellar/python3/3.6.2/bin --install-l
                ==> /usr/local/Cellar/python3/3.6.2/bin/python3 -s setup.py --no-user-cfg install --force --verbose --install-scripts=/usr/local/Cellar/python3/3.6.2/bin --install-l
                ==> Caveats
                Pip, setuptools, and wheel have been installed. To update them
                  pip3 install --upgrade pip setuptools wheel
    
                  You can install Python packages with
                    pip3 install <package>
    
                    They will install into the site-package directory
                      /usr/local/lib/python3.6/site-packages
    
                      See: https://docs.brew.sh/Homebrew-and-Python.html
                      ==> Summary
                      🍺  /usr/local/Cellar/python3/3.6.2: 3,598 files, 56.0MB
    

# ref:  用virtualenv管理python3运行环境 http://www.cnblogs.com/hiddenfox/p/virtualenv-python3.html
# ref:  同时安装Python2和Python3，使之共存  http://www.cnblogs.com/tk2049jq/p/7043480.html
# ref:  virtualenv  https://www.liaoxuefeng.com/wiki/0014316089557264a6b348958f449949df42a6d3a2e542c000/001432712108300322c61f256c74803b43bfd65c6f8d0d0000#0

