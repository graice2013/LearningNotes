#
# usage of lambda function in python
#
lambda is used often in function programming, not only in python.
examples:
1) lambda x,y: x+y
2) lambda x: x if (x>3) else None
    
    y = {0: 1, 1: 0, 2: 1, 3: 1, 4: 0, 5: 1, 6: 0, 7: 1, 8: 0, 9: 0, 10: 0, 11: 1, 12: 0, 13: 1, 14: 0, 15: 0, 16: 0, 17: 1, 18:
         0, 19: 1, 20: 0, 21: 0, 22: 0, 23: 1, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 1, 30: 0, 31: 1, 32: 0, 33: 0, 34: 0, 35:
        0, 36: 0, 37: 1, 38: 0, 39: 0, 40: 0, 41: 1, 42: 0, 43: 1, 44: 0, 45: 0, 46: 0, 47: 1, 48: 0, 49: 0, 50: 0, 51: 0, 52: 0
        , 53: 1, 54: 0, 55: 0, 56: 0, 57: 0, 58: 0, 59: 1, 60: 0, 61: 1, 62: 0, 63: 0, 64: 0, 65: 0, 66: 0, 67: 1, 68: 0, 69: 0,
         70: 0, 71: 1, 72: 0, 73: 1, 74: 0, 75: 0, 76: 0, 77: 0, 78: 0, 79: 1, 80: 0, 81: 0, 82: 0, 83: 1, 84: 0, 85: 0, 86: 0,
        87: 0, 88: 0, 89: 1, 90: 0, 91: 0, 92: 0, 93: 0, 94: 0, 95: 0, 96: 0, 97: 1, 98: 0, 99: 0}
    map(lambda x: x[0], filter(lambda x: x[0] if x[1]&1 else None, zip(y.keys(), y.values()))) # works too
>>> map(lambda x: x[0], filter(lambda x: x[0] if (x[1]&1) else None, zip(y.keys(), y.values())))
[2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97]


3) >>> foo = [2, 18, 9, 22, 17, 24, 8, 12, 27]
>>> 
>>> print filter(lambda x: x % 3 == 0, foo)
[18, 9, 24, 12, 27]


4) lambda functions sometimes can be done by list comprehension.
    map(lambda x: x[0], filter(lambda x: x[0] if x[1]&1 else None, zip(y.keys(), y.values())))
    = 
    yy = [x[0] for x in zip(y.keys(), y.values()) if x[1]&1 and x[0]>0]
    
    import commands
    >>> lines = commands.getoutput('mount -v').splitlines()
    >>> 
     points = map(lambda line: line.split()[2], lines)
    =
     points = [line.split()[2] for line in lines]
    
    >>> print points
    ['/', '/var', '/usr', '/usr/local', '/tmp', '/proc']

    # ref:  http://www.secnetix.de/olli/Python/lambda_functions.hawk
    
