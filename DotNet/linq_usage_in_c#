#
# linq in C#
#
1) linq = language integrated query, 语言集成查询, since .net 3.5.
    dbml = database mark language, 数据描述语言
    
2) 4 main components:
    linq to objects
    linq to sql
    linq to dataset
    linq to xml
    
3) implemented interfaces: IEnumerable, IEnumerable<T>, IQuery, IQuery<T> etc.
4) Usage example:
  4.1) use Object Relational Designer in VS 
      -> through Linq to SQL class type
      -> .dbml file
      -> drag a Table1 or more tables from Server Resource Manager : Database into .dbml
        -> generate Table1DataContext class automatically
      -> query etc.
    
  4.2) manually mapping a Table1 to an entity class
      -> using System.Data.Linq.Mapping;
          
          [Table]
          public class Table1
          {
            [Column(IsPrimaryKey=True)]
            public string UserID { get; set};
            ...
            
          }
   
 5) linq CRUD command:
    # Where, Select, Distinct : 有延迟。
    # Min, Max, Sum, Count, LongCount, Average, Aggregate: 没有延迟。
    
    for Query:
      Table1DataContext db = new Table1DataContext();
      var table1 = db.Table1;
      datagrid1.DataSource = table1.where(u => u.UserID = "0001");
      datagrid1.DataBind();
      
      DataContext db = new DataContext(connStr);
      var table1 = db.getTable<Table1>();
      datagrid1.DataSource = table1.where(u => u.UserID = "0001");
      datagrid1.DataBind();
      
      var query = db.UserInfo.select(u => new(u.uID, u.uName));
      var query = db.UserInfo.where(u => u.UserID = "0001") select(u => u.Birthday);
      var query = db.UserInfo.OrderBy(u => u.Birthday).ThenBy(u => u.Major);
      
    for Create:
      db.InsertOnSubmit();
      db.SubmitChanges();
      
    for Update:
      string newcity="Shanghai";
      db.ExecuteCommand("update Customers set City={0} where CustomerID like 'A%'001'", newcity);
      
      
    for Delete:
      db.DeleteAllOnSubmit();
      db.SubmitChanges();
      
       
    # using built-in functions:
    var q = from c in db.Employees where c.HireDate >= new DateTime('1994-1-1') select c;
    var q = from c in db.Employees select new{Name=e.FirstName + " " + e.LastName, Phone=e.HomePhone};
    var q = from p in db.Products select 
            new{
                p.ProductID,
                Availability=p.UnitsinStock - p.UnitsinOrder < 0 ? "Out-of-Stock" : "in-Stock"
            };
    var q = from c in db.Customers select
            new{
                c.CutomerID,
                CompanyInfo = new{c.CompanyName, c.City, c.Country};
                ContactInfo = new{c.ContactName, c.ContactTitle}
            };
    var q = (from c in db.Customers select c.City).Distinct();
    
    
    Customer firstShipper = db.Shippers.First();
    Customer firstBonap = db.Customers.First(c => c.Customer="BONAP"); 
    
    var q = db.Customers.Count();
    var q = db.Customers.LongCount();
    
    var q = db.Orders.Select(o => o.Freight).Sum();
    var q = db.Products.Sum(p => p.UnitsinStock);
    
    # 查找每个类别中单价最低低产品
    var q = from p in db.Products
            group p by p.CategoryID into g
            select new{
                CategoryID = g.key,
                CheapestProducts = for p2 in g
                                where p2.UnitPrice == g.Min(p3 => p3.UnitPrice)
                                select p2;
            }
     # similar for Max, Average, Aggregate as Min.
     
 6) linq grammar:
     from ... in ...
     join ... in ... on ... equals ... into ...
     where ...
     group ... by ... into ...
     orderby ... ascending / descending
     select ... into ... (# or select new {...} into ...)
     
     * must begin with from, end with select or group.
     * use let ... = ... to keep result of sub-query.
     
     
     
     
     
# ref:  http://www.cnblogs.com/Dlonghow/p/1413830.html
# ref:  http://wenku.baidu.com/view/a4b6f9279b89680203d825ea.html?from=search
# ref:  http://wenku.baidu.com/view/5c7d6af8910ef12d2bf9e703.html?from=search###
# ref:  http://wenku.baidu.com/view/5a119ec158f5f61fb6366604

# ref:  http://m.jb51.net/article/80595.htm
# ref:  http://www.cnblogs.com/heyuquan/p/Linq-to-Objects.html
# ref:  Linq入门详解（Linq to Objects）   http://www.cnblogs.com/heyuquan/p/Linq-to-Objects.html
# ref:  LINQ语法详解    http://www.cnblogs.com/zscmj/p/5717454.html
# ref:  LINQ语法详解3   http://m.blog.csdn.net/article/details?id=8063363



